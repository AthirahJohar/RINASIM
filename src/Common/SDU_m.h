//
// Generated file, do not edit! Created by opp_msgc 4.5 from Common/SDU.msg.
//

#ifndef _SDU_M_H_
#define _SDU_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0405
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include <vector>
#include "CDAPMessage_m.h"
#include "Data.h"
typedef std::vector<CDAPMessage*> mUserDataType;
// }}



/**
 * Class generated from <tt>Common/SDU.msg</tt> by opp_msgc.
 * <pre>
 * message SDU extends Data {
 *     @customize(true);
 *     unsigned int size;
 *     unsigned int offset;
 *     mUserDataType mUserData;
 * }
 * </pre>
 *
 * SDU_Base is only useful if it gets subclassed, and SDU is derived from it.
 * The minimum code to be written for SDU is the following:
 *
 * <pre>
 * class SDU : public SDU_Base
 * {
 *   private:
 *     void copy(const SDU& other) { ... }

 *   public:
 *     SDU(const char *name=NULL, int kind=0) : SDU_Base(name,kind) {}
 *     SDU(const SDU& other) : SDU_Base(other) {copy(other);}
 *     SDU& operator=(const SDU& other) {if (this==&other) return *this; SDU_Base::operator=(other); copy(other); return *this;}
 *     virtual SDU *dup() const {return new SDU(*this);}
 *     // ADD CODE HERE to redefine and implement pure virtual functions from SDU_Base
 * };
 * </pre>
 *
 * The following should go into a .cc (.cpp) file:
 *
 * <pre>
 * Register_Class(SDU);
 * </pre>
 */
class SDU_Base : public ::Data
{
  protected:
    unsigned int size_var;
    unsigned int offset_var;
    mUserDataType mUserData_var;

  private:
    void copy(const SDU_Base& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SDU_Base&);
    // make constructors protected to avoid instantiation
    SDU_Base(const char *name=NULL, int kind=0);
    SDU_Base(const SDU_Base& other);
    // make assignment operator protected to force the user override it
    SDU_Base& operator=(const SDU_Base& other);

  public:
    virtual ~SDU_Base();
    virtual SDU_Base *dup() const {throw cRuntimeError("You forgot to manually add a dup() function to class SDU");}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual unsigned int getSize() const;
    virtual void setSize(unsigned int size);
    virtual unsigned int getOffset() const;
    virtual void setOffset(unsigned int offset);
    virtual mUserDataType& getMUserData();
    virtual const mUserDataType& getMUserData() const {return const_cast<SDU_Base*>(this)->getMUserData();}
    virtual void setMUserData(const mUserDataType& mUserData);
};


#endif // _SDU_M_H_
