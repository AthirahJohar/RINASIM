[General]
network = SimpleRelay
sim-time-limit = 15min
debug-on-errors = true
seed-set = ${runnumber}

**.host1.applicationProcess1.apName = "App1"
**.host2.applicationProcess1.apName = "App2"
**.applicationEntity.aeType = "AEPing"
**.iae.aeName = "Ping"

#Static addressing
**.host1.ipcProcess0.ipcAddress = "1"
**.host2.ipcProcess0.ipcAddress = "2"
**.interiorRouter.ipcProcess0.ipcAddress = "3"
**.interiorRouter.ipcProcess1.ipcAddress = "4"

**.host1.ipcProcess1.ipcAddress = "11"
**.host2.ipcProcess1.ipcAddress = "22"
**.interiorRouter.relayIpc.ipcAddress = "33"

**.host1.ipcProcess0.difName = "Layer01"
**.interiorRouter.ipcProcess0.difName = "Layer01"

**.host2.ipcProcess0.difName = "Layer02"
**.interiorRouter.ipcProcess1.difName = "Layer02"

**.host*.ipcProcess1.difName = "Layer11"
**.interiorRouter.relayIpc.difName = "Layer11"

#DIF Allocator settings
**.host1.difAllocator.configData = xmldoc("config.xml", "Configuration/Host[@id='host1']/DA")
**.host2.difAllocator.configData = xmldoc("config.xml", "Configuration/Host[@id='host2']/DA")
**.interiorRouter.difAllocator.configData = xmldoc("config.xml", "Configuration/Router[@id='interiorRouter']/DA")

#QoS Cube sets
**.ra.qoscubesData = xmldoc("config.xml", "Configuration/QoSCubesSet")


[Config Ping]
fingerprint = "1475-794b"
#PingApp setup
**.host1.applicationProcess1.applicationEntity.iae.dstApName = "App2"
**.host1.applicationProcess1.applicationEntity.iae.dstAeName = "Ping"
**.host1.applicationProcess1.applicationEntity.iae.startAt = 10s
**.host1.applicationProcess1.applicationEntity.iae.pingAt =  15s
**.host1.applicationProcess1.applicationEntity.iae.rate = 5
**.host1.applicationProcess1.applicationEntity.iae.stopAt = 25s

#Specify AEPing message size
**.host1.applicationProcess1.applicationEntity.iae.size = 256B
#Specify timeout of CreateRequest message
**.fa.createRequestTimeout = 2s

[Config PingWithPreallocation]
fingerprint = "07f4-72e3"
**.host1.applicationProcess1.applicationEntity.iae.dstApName = "App2"
**.host1.applicationProcess1.applicationEntity.iae.dstAeName = "Ping"
**.host1.applicationProcess1.applicationEntity.iae.startAt = 10s
**.host1.applicationProcess1.applicationEntity.iae.pingAt =  100s
**.host1.applicationProcess1.applicationEntity.iae.rate = 5
**.host1.applicationProcess1.applicationEntity.iae.stopAt = 200s

# flows to allocate at the beginning
**.interiorRouter.relayIpc.resourceAllocator.ra.flows = \
    xmldoc("config.xml", "Configuration/Router[@id='interiorRouter']/IPC[@id='relayIpc']/RA/Flows")

[Config PingWithCongestion] # FIXME
fingerprint = "0000-0000"
**.host1.applicationProcess1.applicationEntity.iae.dstApName = "App2"
**.host1.applicationProcess1.applicationEntity.iae.dstAeName = "Ping"
**.host1.applicationProcess1.applicationEntity.iae.startAt = 10s
**.host1.applicationProcess1.applicationEntity.iae.pingAt =  300s
**.host1.applicationProcess1.applicationEntity.iae.rate = 80
**.host1.applicationProcess1.applicationEntity.iae.stopAt = 500s

# make one of the bottom router IPCs become easily congested
**.host1.ipcProcess0.relayAndMux.TxQueuingTime = 50000ms
# use RED as an example congestion control algorithm
**.interiorRouter.ipcProcess1.relayAndMux.qMonitorPolicyName = "REDMonitor"
**.interiorRouter.ipcProcess1.relayAndMux.maxQPolicyName = "REDDropper"
# increase the FA M_CREATE timeout so it doesn't give up too early
**.fa.createRequestTimeout = 100s

**.host*.ipcProcess*.efcp.efcp.rtt = 100s
**.host*.ipcProcess*.efcp.efcp.mpl = 200s
#**.host*.ipcProcess1.efcp.efcp.rtt = 100s

**.interiorRouter.ipcProcess*.efcp.efcp.rtt = 100s
**.interiorRouter.ipcProcess*.efcp.efcp.mpl = 200s

[Config PingWithDiffServ]
fingerprint = "c424-852e"
**.host1.applicationProcess1.applicationEntity.iae.dstApName = "App2"
**.host1.applicationProcess1.applicationEntity.iae.dstAeName = "Ping"
**.host1.applicationProcess1.applicationEntity.iae.startAt = 10s
**.host1.applicationProcess1.applicationEntity.iae.pingAt =  100s
**.host1.applicationProcess1.applicationEntity.iae.rate = 5
**.host1.applicationProcess1.applicationEntity.iae.stopAt = 200s

# make all RMTs except the ones in relay IPCs differentiate PDUs by (N)-flow
**.ipcProcess*.resourceAllocator.queueAllocPolicyName = "QueuePerNFlow"
**.ipcProcess*.resourceAllocator.queueIdGenName = "IDPerNFlow"
# make relay IPCs' RMTs differentiate PDUs by their QoS
**.relayIpc.resourceAllocator.queueAllocPolicyName = "QueuePerNQoS"
**.relayIpc.resourceAllocator.queueIdGenName = "IDPerNQoS"
