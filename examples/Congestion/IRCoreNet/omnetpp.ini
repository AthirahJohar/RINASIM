[General]
network = IRCoreNet

seed-set = 55

#DIF Allocator settings
**.difAllocator.directory.configData = xmldoc("directory.xml", "DA")

#Shim-Flows allocation
**.ra.preallocation = xmldoc("connectionset.xml", "ConnectionSet")
**.flowAllocator.newFlowReqPolicyType = "MinComparer"
**.isSelfEnrolled = true

#Routing settings
**.relayIpc.resourceAllocator.pdufgPolicyName = "IQoSAwareMEntries"
**.relayIpc.relayAndMux.ForwardingPolicyName = "IMultiQoSTable"
**.relayIpc.routingPolicyName = "TSimpleDV"

**.relayIpc.resourceAllocator.pduFwdGenerator.data = xmldoc("metrics.xml", "Metrics")
**.relayIpc.resourceAllocator.pduFwdGenerator.infinite = 200
**.relayIpc.resourceAllocator.pduFwdGenerator.latMultip = 2

**.relayIpc.relayAndMux.pduForwardingPolicy.MA2QoS = "MA"

##---Backbone---

#QoS settings
**.r*.relayIpc.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r*.relayIpc.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")

**.r*.ipcProcess[*].**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r*.ipcProcess[*].**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")


#DIF & shims
**.r*.relayIpc.difName = "Core"

**.r1.relayIpc.ipcAddress = "1"
**.r2.relayIpc.ipcAddress = "2"
**.r3.relayIpc.ipcAddress = "3"
**.r4.relayIpc.ipcAddress = "4"
**.r5.relayIpc.ipcAddress = "5"
**.r6.relayIpc.ipcAddress = "6"
**.r7.relayIpc.ipcAddress = "7"
**.r8.relayIpc.ipcAddress = "8"
**.r9.relayIpc.ipcAddress = "9"
**.ra.relayIpc.ipcAddress = "a"

**.r1.ipcProcess[0].difName = "shim12"
**.r1.ipcProcess[1].difName = "shim13"
**.r1.ipcProcess[2].difName = "shim16"

**.r2.ipcProcess[0].difName = "shim12"
**.r2.ipcProcess[1].difName = "shim23"
**.r2.ipcProcess[2].difName = "shim25"

**.r3.ipcProcess[0].difName = "shim13"
**.r3.ipcProcess[1].difName = "shim23"
**.r3.ipcProcess[2].difName = "shim34"

**.r4.ipcProcess[0].difName = "shim34"
**.r4.ipcProcess[1].difName = "shim45"
**.r4.ipcProcess[2].difName = "shim46"

**.r5.ipcProcess[0].difName = "shim25"
**.r5.ipcProcess[1].difName = "shim45"
**.r5.ipcProcess[2].difName = "shim57"

**.r6.ipcProcess[0].difName = "shim16"
**.r6.ipcProcess[1].difName = "shim46"
**.r6.ipcProcess[2].difName = "shim67"
**.r6.ipcProcess[3].difName = "shim68"

**.r7.ipcProcess[0].difName = "shim57"
**.r7.ipcProcess[1].difName = "shim67"
**.r7.ipcProcess[2].difName = "shim79"

**.r8.ipcProcess[0].difName = "shim68"
**.r8.ipcProcess[1].difName = "shim89"
**.r8.ipcProcess[2].difName = "shim8a"

**.r9.ipcProcess[0].difName = "shim79"
**.r9.ipcProcess[1].difName = "shim89"
**.r9.ipcProcess[2].difName = "shim9a"

**.ra.ipcProcess[0].difName = "shim8a"
**.ra.ipcProcess[1].difName = "shim9a"


**.r1.ipcProcess[*].ipcAddress = "1"
**.r2.ipcProcess[*].ipcAddress = "2"
**.r3.ipcProcess[*].ipcAddress = "3"
**.r4.ipcProcess[*].ipcAddress = "4"
**.r5.ipcProcess[*].ipcAddress = "5"
**.r6.ipcProcess[*].ipcAddress = "6"
**.r7.ipcProcess[*].ipcAddress = "7"
**.r8.ipcProcess[*].ipcAddress = "8"
**.r9.ipcProcess[*].ipcAddress = "9"
**.ra.ipcProcess[*].ipcAddress = "a"


#**.r1.infection.data = xmldoc("infection.xml", "Infection/InfectionNode[@id='Node_1']")
#**.r2.infection.data = xmldoc("infection.xml", "Infection/InfectionNode[@id='Node_2']")
#*.r3.infection.data = xmldoc("infection.xml", "Infection/InfectionNode[@id='Node_3']")
#**.r4.infection.data = xmldoc("infection.xml", "Infection/InfectionNode[@id='Node_4']")
#**.r5.infection.data = xmldoc("infection.xml", "Infection/InfectionNode[@id='Node_5']")
#**.r6.infection.data = xmldoc("infection.xml", "Infection/InfectionNode[@id='Node_6']")
#**.r7.infection.data = xmldoc("infection.xml", "Infection/InfectionNode[@id='Node_7']")
#**.r8.infection.data = xmldoc("infection.xml", "Infection/InfectionNode[@id='Node_8']")
#**.r9.infection.data = xmldoc("infection.xml", "Infection/InfectionNode[@id='Node_9']")
#**.ra.infection.data = xmldoc("infection.xml", "Infection/InfectionNode[@id='Node_a']")

**.r1.infection.data = xmldoc("ninfection.xml", "Infection/InfectionNode[@id='Node_1']")
**.r2.infection.data = xmldoc("ninfection.xml", "Infection/InfectionNode[@id='Node_2']")
**.r3.infection.data = xmldoc("ninfection.xml", "Infection/InfectionNode[@id='Node_3']")
**.r4.infection.data = xmldoc("ninfection.xml", "Infection/InfectionNode[@id='Node_4']")
*.r5.infection.data = xmldoc("ninfection.xml", "Infection/InfectionNode[@id='Node_5']")
**.r6.infection.data = xmldoc("ninfection.xml", "Infection/InfectionNode[@id='Node_6']")
**.r7.infection.data = xmldoc("ninfection.xml", "Infection/InfectionNode[@id='Node_7']")
**.r8.infection.data = xmldoc("ninfection.xml", "Infection/InfectionNode[@id='Node_8']")
**.r9.infection.data = xmldoc("ninfection.xml", "Infection/InfectionNode[@id='Node_9']")
**.ra.infection.data = xmldoc("ninfection.xml", "Infection/InfectionNode[@id='Node_a']")


**.r*.relayIpc.**.addrComparatorName = "InfectionComparator"
**.listener.data = xmldoc("ListenQoS.xml", "QoS")

#sim-time-limit =  10.04s
#**.relayAndMux.maxQueuePolicy.printAtEnd = true
#**.r2.relayIpc.relayAndMux.pduForwardingPolicy.printAtEnd = true
#**.r2.relayIpc.relayAndMux.pduForwardingPolicy.printCacheAtEnd = true

**.r*.infection.linkRate = 10*1024*1024*1024
**.r*.infection.usage = 1.0


**.r*.infection.iniTime = 30.000
**.r*.infection.finTime = 30.01

**.r*.infection.markIniT = 30.000
**.r*.infection.markFinT = 30.01


**.defaultThreshQLength = 0
**.defaultMaxQLength =  200

**.r*.ipcProcess[*].**.queueAllocPolicyName = "QueuePerNQoS"
**.r*.ipcProcess[*].**.queueIdGenName = "IDPerNQoS"

**.r*.ipcProcess[*].relayAndMux.maxQPolicyName = "DumbMaxQ"
**.r*.ipcProcess[*].relayAndMux.qMonitorPolicyName = "ModularMonitor"
**.r*.ipcProcess[*].relayAndMux.schedPolicyName = "DumbSch"
**.r*.ipcProcess[*].relayAndMux.queueMonitorPolicy.outputDropSubModule_Type = "MM_DQ_Drop"
**.r*.ipcProcess[*].relayAndMux.queueMonitorPolicy.outputDropSubModule.data = xmldoc("modules.xml", "Configuration/DQQueueDrop")

**.r*.ipcProcess[*].relayAndMux.queueMonitorPolicy.outputOutSubModule_Type = "MM_DL_Out"
**.r*.ipcProcess[*].relayAndMux.queueMonitorPolicy.outputOutSubModule.data = xmldoc("modules.xml", "Configuration/DLOUT")

#**.r2.relayIpc.**.printCacheAtEnd  = true

**.r*.ipcProcess[*].relayAndMux.maxQueuePolicy.printAtEnd = true
#**.r1.relayIpc.relayAndMux.**.printCacheAtEnd = true

**.listener.configname = "test"
**.listener.runname = "m"
**.listener.mtu = 4500

#sim-time-limit = 20s





