[General]
network = StopAndWait
**.pduTracing = false
**.scalar-recording = false
**.vector-recording = false

#DIF Allocator settings
**.difAllocator.directory.configData = xmldoc("directory.xml", "DA")

#Shim-Flows allocation
**.ra.preallocation = xmldoc("connectionset.xml", "ConnectionSet")
**.flowAllocator.newFlowReqPolicyType = "MinComparer"
**.isSelfEnrolled = true

#Routing settings
**.relayIpc.resourceAllocator.pdufgPolicyName ="SimpleLatOrHopMEntries"
**.relayIpc.relayAndMux.ForwardingPolicyName = "IMultiQoSTable"
**.relayIpc.routingPolicyName = "TSimpleDV"

**.relayIpc.resourceAllocator.pduFwdGenerator.data = xmldoc("metrics.xml", "Metrics")

**.relayIpc.resourceAllocator.pduFwdGenerator.infinite = 200
**.relayIpc.resourceAllocator.pduFwdGenerator.latMultip = 2

**.relayIpc.relayAndMux.pduForwardingPolicy.MA2QoS = "MA"

##---Backbone---

#QoS settings
**.r*.relayIpc.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r*.relayIpc.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")

**.r*.ipcProcess[*].**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r*.ipcProcess[*].**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")


#DIF & shims
**.r*.relayIpc.difName = "Core"

**.r1.**.ipcAddress = "1"
**.r2.**.ipcAddress = "2"

**.r1.ipcProcess[0].difName = "shim12"
**.r2.ipcProcess[0].difName = "shim12"


#Infection Data
**.r*.relayIpc.**.addrComparatorName = "InfectionComparator"
**.listener.data = xmldoc("ListenQoS.xml", "QoS")

**.r*.infection.linkRate = 10*1000*1000*1000
**.r1.infection.data = xmldoc("infection.xml", "Infection/InfectionNode[@id='Node_1_A']")
**.r2.infection.data = xmldoc("infection.xml", "Infection/InfectionNode[@id='Node_2_A']")

**.listener.configname = "A-k"

**.r*.infection.iniTime = 30.000
**.r*.infection.finTime = 30.10

**.r*.infection.markIniT = 0.000
**.r*.infection.markFinT = 99.000

**.defaultThreshQLength = 0
**.defaultMaxQLength =  200


**.efcp.maxPDUSize = 100000B
**.efcp.maxSDUSize = 100000B


**.r*.infection.usage = 1.1
**.listener.runname = ""


**.ipcProcess[*].**.printAtEnd = true

[Config DQ2BE]

**.r*.ipcProcess[*].**.queueAllocPolicyName = "SingleQueue"
**.r*.ipcProcess[*].**.queueIdGenName = "SingleID"


**.r*.relayIpc.**.queueAllocPolicyName = "QueuePerNQoS"
**.r*.relayIpc.**.queueIdGenName = "IDPerNQoS"

**.r*.relayIpc.relayAndMux.maxQPolicyName = "DumbMaxQ"
**.r*.relayIpc.relayAndMux.qMonitorPolicyName = "ModularMonitor"
**.r*.relayIpc.relayAndMux.schedPolicyName = "DumbSch"
**.r*.relayIpc.relayAndMux.queueMonitorPolicy.outputOutSubModule_Type = "MM_DL_Out"
**.r*.relayIpc.relayAndMux.queueMonitorPolicy.outputOutSubModule.data = xmldoc("modules.xml", "Configuration/DLOUT")


[Config DQ2Iterative]
**.r*.ipcProcess[*].**.queueAllocPolicyName = "QueuePerNFlow"
**.r*.ipcProcess[*].**.queueIdGenName = "IDPerNFlow"

**.r*.ipcProcess[*].relayAndMux.maxQPolicyName = "TailDrop"
**.r*.ipcProcess[*].relayAndMux.qMonitorPolicyName = "IterativeMonitor"
**.r*.ipcProcess[*].relayAndMux.schedPolicyName = "IterativeScheduling"

**.defaultThreshQLength = 0
**.defaultMaxQLength =  10

**.r*.relayIpc.**.queueAllocPolicyName = "QueuePerNQoS"
**.r*.relayIpc.**.queueIdGenName = "IDPerNQoS"

**.r*.relayIpc.relayAndMux.maxQPolicyName = "DumbMaxQ"
**.r*.relayIpc.relayAndMux.qMonitorPolicyName = "ModularMonitor"
**.r*.relayIpc.relayAndMux.schedPolicyName = "DumbSch"
**.r*.relayIpc.relayAndMux.queueMonitorPolicy.outputOutSubModule_Type = "MM_DL_Out"
**.r*.relayIpc.relayAndMux.queueMonitorPolicy.outputOutSubModule.data = xmldoc("modules.xml", "Configuration/DLOUT")

**.r*.relayIpc.relayAndMux.queueMonitorPolicy.outputDropSubModule_Type = "MM_DQ_Drop"
**.r*.relayIpc.relayAndMux.queueMonitorPolicy.outputDropSubModule.data = xmldoc("modules.xml", "Configuration/DQQueueDrop")


[Config DQ2SW]

**.r*.ipcProcess[*].**.queueAllocPolicyName = "QueuePerNFlow"
**.r*.ipcProcess[*].**.queueIdGenName = "IDPerNFlow"

**.r*.ipcProcess[*].relayAndMux.maxQPolicyName = "TailDrop"
**.r*.ipcProcess[*].relayAndMux.qMonitorPolicyName = "IterativeStopMonitor"
**.r*.ipcProcess[*].relayAndMux.schedPolicyName = "IterativeScheduling"

**.defaultThreshQLength = 0
**.defaultMaxQLength =  10

**.r*.relayIpc.**.queueAllocPolicyName = "QueuePerNQoS"
**.r*.relayIpc.**.queueIdGenName = "IDPerNQoS"

**.r*.relayIpc.relayAndMux.maxQPolicyName = "DumbMaxQ"
**.r*.relayIpc.relayAndMux.qMonitorPolicyName = "ModularMonitor"
**.r*.relayIpc.relayAndMux.schedPolicyName = "DumbSch"
**.r*.relayIpc.relayAndMux.queueMonitorPolicy.outputOutSubModule_Type = "MM_DL_Out"
**.r*.relayIpc.relayAndMux.queueMonitorPolicy.outputOutSubModule.data = xmldoc("modules.xml", "Configuration/DLOUT")

**.r*.relayIpc.relayAndMux.queueMonitorPolicy.outputDropSubModule_Type = "MM_DQ_Drop"
**.r*.relayIpc.relayAndMux.queueMonitorPolicy.outputDropSubModule.data = xmldoc("modules.xml", "Configuration/DQQueueDrop")

