[General]
network = CoreNet
sim-time-limit =  1min


#DIF Allocator settings
**.difAllocator.directory.configData = xmldoc("directory.xml", "DA")

#Shim-Flows allocation
**.ra.preallocation = xmldoc("connectionset.xml", "ConnectionSet")

**.isSelfEnrolled = true

##---Backbone---

#QoS settings
**.r*.relayIpc.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r*.relayIpc.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.r*.relayIpc.flowAllocator.newFlowReqPolicyType = "MinComparer"

**.r*.ipcProcess[*].**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r*.ipcProcess[*].**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.r*.ipcProcess[*].flowAllocator.newFlowReqPolicyType = "MinComparer"

#Routing settings
**.r*.relayIpc.resourceAllocator.pdufgPolicyName = "HopsQoSMEntries"
**.r*.relayIpc.relayAndMux.ForwardingPolicyName = "MultiQoSTable"
**.r*.relayIpc.routingPolicyName = "TSimpleDV"

#DIF & shims
**.r*.relayIpc.difName = "Core"

**.r1.relayIpc.ipcAddress = "1"
**.r2.relayIpc.ipcAddress = "2"
**.r3.relayIpc.ipcAddress = "3"
**.r4.relayIpc.ipcAddress = "4"
**.r5.relayIpc.ipcAddress = "5"
**.r6.relayIpc.ipcAddress = "6"
**.r7.relayIpc.ipcAddress = "7"
**.r8.relayIpc.ipcAddress = "8"
**.r9.relayIpc.ipcAddress = "9"
**.ra.relayIpc.ipcAddress = "a"

**.r1.ipcProcess[0].difName = "shim12"
**.r1.ipcProcess[1].difName = "shim13"
**.r1.ipcProcess[2].difName = "shim16"

**.r2.ipcProcess[0].difName = "shim12"
**.r2.ipcProcess[1].difName = "shim23"
**.r2.ipcProcess[2].difName = "shim25"

**.r3.ipcProcess[0].difName = "shim13"
**.r3.ipcProcess[1].difName = "shim23"
**.r3.ipcProcess[2].difName = "shim34"

**.r4.ipcProcess[0].difName = "shim34"
**.r4.ipcProcess[1].difName = "shim45"
**.r4.ipcProcess[2].difName = "shim46"

**.r5.ipcProcess[0].difName = "shim25"
**.r5.ipcProcess[1].difName = "shim45"
**.r5.ipcProcess[2].difName = "shim57"

**.r6.ipcProcess[0].difName = "shim16"
**.r6.ipcProcess[1].difName = "shim46"
**.r6.ipcProcess[2].difName = "shim67"
**.r6.ipcProcess[3].difName = "shim68"

**.r7.ipcProcess[0].difName = "shim57"
**.r7.ipcProcess[1].difName = "shim67"
**.r7.ipcProcess[2].difName = "shim79"

**.r8.ipcProcess[0].difName = "shim68"
**.r8.ipcProcess[1].difName = "shim89"
**.r8.ipcProcess[2].difName = "shim8a"

**.r9.ipcProcess[0].difName = "shim79"
**.r9.ipcProcess[1].difName = "shim89"
**.r9.ipcProcess[2].difName = "shim9a"

**.ra.ipcProcess[0].difName = "shim8a"
**.ra.ipcProcess[1].difName = "shim9a"


**.r1.ipcProcess[*].ipcAddress = "1"
**.r2.ipcProcess[*].ipcAddress = "2"
**.r3.ipcProcess[*].ipcAddress = "3"
**.r4.ipcProcess[*].ipcAddress = "4"
**.r5.ipcProcess[*].ipcAddress = "5"
**.r6.ipcProcess[*].ipcAddress = "6"
**.r7.ipcProcess[*].ipcAddress = "7"
**.r8.ipcProcess[*].ipcAddress = "8"
**.r9.ipcProcess[*].ipcAddress = "9"
**.ra.ipcProcess[*].ipcAddress = "a"



##---InterDC-A---

#QoS settings
**.A*.relayIpc.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.A*.relayIpc.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.A*.relayIpc.flowAllocator.newFlowReqPolicyType = "MinComparer"

**.A*.ipcProcess[*].**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.A*.ipcProcess[*].**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.A*.ipcProcess[*].flowAllocator.newFlowReqPolicyType = "MinComparer"

**.r1.GWIpc.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r1.GWIpc.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.r1.GWIpc.flowAllocator.newFlowReqPolicyType = "MinComparer"

**.r1.bottomGW.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r1.bottomGW.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.r1.bottomGW.flowAllocator.newFlowReqPolicyType = "MinComparer"

**.r5.GWIpc.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r5.GWIpc.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.r5.GWIpc.flowAllocator.newFlowReqPolicyType = "MinComparer"

**.r5.bottomGW.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r5.bottomGW.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.r5.bottomGW.flowAllocator.newFlowReqPolicyType = "MinComparer"

**.ra.GWIpc.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.ra.GWIpc.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.ra.GWIpc.flowAllocator.newFlowReqPolicyType = "MinComparer"

**.ra.bottomGW.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.ra.bottomGW.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.ra.bottomGW.flowAllocator.newFlowReqPolicyType = "MinComparer"

#Routing settings
**.A*.relayIpc.resourceAllocator.pdufgPolicyName = "HopsQoSMEntries"
**.A*.relayIpc.relayAndMux.ForwardingPolicyName = "MultiQoSTable"
**.A*.relayIpc.routingPolicyName = "TSimpleDV"

**.r1.GWIpc.resourceAllocator.pdufgPolicyName = "HopsQoSMEntries"
**.r1.GWIpc.relayAndMux.ForwardingPolicyName = "MultiQoSTable"
**.r1.GWIpc.routingPolicyName = "TSimpleDV"

**.r5.GWIpc.resourceAllocator.pdufgPolicyName = "HopsQoSMEntries"
**.r5.GWIpc.relayAndMux.ForwardingPolicyName = "MultiQoSTable"
**.r5.GWIpc.routingPolicyName = "TSimpleDV"

**.ra.GWIpc.resourceAllocator.pdufgPolicyName = "HopsQoSMEntries"
**.ra.GWIpc.relayAndMux.ForwardingPolicyName = "MultiQoSTable"
**.ra.GWIpc.routingPolicyName = "TSimpleDV"

#DIF & shims
**.r1.GWIpc.difName = "iDCA"
**.r5.GWIpc.difName = "iDCA"
**.ra.GWIpc.difName = "iDCA"
**.A*.relayIpc.difName = "iDCA"

**.r1.GWIpc.ipcAddress = "gw1"
**.r5.GWIpc.ipcAddress = "gw2"
**.ra.GWIpc.ipcAddress = "gw3"

**.A1.relayIpc.ipcAddress = "1"
**.A2.relayIpc.ipcAddress = "2"
**.A3.relayIpc.ipcAddress = "3"

**.r1.bottomGW.difName = "shimA1"
**.r5.bottomGW.difName = "shimA2"
**.ra.bottomGW.difName = "shimA3"

**.A1.ipcProcess[0].difName = "shimA1"
**.A2.ipcProcess[0].difName = "shimA2"
**.A3.ipcProcess[0].difName = "shimA3"

**.r1.bottomGW.ipcAddress = "1"
**.r5.bottomGW.ipcAddress = "1"
**.ra.bottomGW.ipcAddress = "1"
**.A*.ipcProcess[0].ipcAddress = "2"


##---InterDC-A---

#QoS settings
**.B*.relayIpc.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.B*.relayIpc.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.B*.relayIpc.flowAllocator.newFlowReqPolicyType = "MinComparer"

**.B*.ipcProcess[*].**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.B*.ipcProcess[*].**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.B*.ipcProcess[*].flowAllocator.newFlowReqPolicyType = "MinComparer"

**.r2.GWIpc.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r2.GWIpc.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.r2.GWIpc.flowAllocator.newFlowReqPolicyType = "MinComparer"

**.r2.bottomGW.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r2.bottomGW.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.r2.bottomGW.flowAllocator.newFlowReqPolicyType = "MinComparer"

**.r4.GWIpc.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r4.GWIpc.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.r4.GWIpc.flowAllocator.newFlowReqPolicyType = "MinComparer"

**.r4.bottomGW.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r4.bottomGW.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.r4.bottomGW.flowAllocator.newFlowReqPolicyType = "MinComparer"

**.r9.GWIpc.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r9.GWIpc.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.r9.GWIpc.flowAllocator.newFlowReqPolicyType = "MinComparer"

**.r9.bottomGW.**.ra.qoscubesData = xmldoc("qoscube.xml", "QoSCubesSet")
**.r9.bottomGW.**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")
**.r9.bottomGW.flowAllocator.newFlowReqPolicyType = "MinComparer"

#Routing settings
**.B*.relayIpc.resourceAllocator.pdufgPolicyName = "HopsQoSMEntries"
**.B*.relayIpc.relayAndMux.ForwardingPolicyName = "MultiQoSTable"
**.B*.relayIpc.routingPolicyName = "TSimpleDV"

**.r2.GWIpc.resourceAllocator.pdufgPolicyName = "HopsQoSMEntries"
**.r2.GWIpc.relayAndMux.ForwardingPolicyName = "MultiQoSTable"
**.r2.GWIpc.routingPolicyName = "TSimpleDV"

**.r4.GWIpc.resourceAllocator.pdufgPolicyName = "HopsQoSMEntries"
**.r4.GWIpc.relayAndMux.ForwardingPolicyName = "MultiQoSTable"
**.r4.GWIpc.routingPolicyName = "TSimpleDV"

**.r9.GWIpc.resourceAllocator.pdufgPolicyName = "HopsQoSMEntries"
**.r9.GWIpc.relayAndMux.ForwardingPolicyName = "MultiQoSTable"
**.r9.GWIpc.routingPolicyName = "TSimpleDV"

#DIF & shims
**.r2.GWIpc.difName = "iDCB"
**.r4.GWIpc.difName = "iDCB"
**.r9.GWIpc.difName = "iDCB"
**.B*.relayIpc.difName = "iDCB"

**.r2.GWIpc.ipcAddress = "gw1"
**.r4.GWIpc.ipcAddress = "gw2"
**.r9.GWIpc.ipcAddress = "gw3"

**.B1.relayIpc.ipcAddress = "1"
**.B2.relayIpc.ipcAddress = "2"
**.B3.relayIpc.ipcAddress = "3"

**.r2.bottomGW.difName = "shimB1"
**.r4.bottomGW.difName = "shimB2"
**.r9.bottomGW.difName = "shimB3"

**.B1.ipcProcess[0].difName = "shimB1"
**.B2.ipcProcess[0].difName = "shimB2"
**.B3.ipcProcess[0].difName = "shimB3"

**.r2.bottomGW.ipcAddress = "1"
**.r4.bottomGW.ipcAddress = "1"
**.r9.bottomGW.ipcAddress = "1"
**.B*.ipcProcess[0].ipcAddress = "2"






#DCs A
**.r1.infection.data = xmldoc("infection.xml", "Infection/InfectionInterDCA")
**.r5.infection.data = xmldoc("infection.xml", "Infection/InfectionInterDCA")
**.ra.infection.data = xmldoc("infection.xml", "Infection/InfectionInterDCA")

**.r1.infection.iniTime = -10
**.r5.infection.iniTime = -10
**.ra.infection.iniTime = -10

#DCs B
**.r2.infection.data = xmldoc("infection.xml", "Infection/InfectionInterDCB")
**.r4.infection.data = xmldoc("infection.xml", "Infection/InfectionInterDCB")
**.r9.infection.data = xmldoc("infection.xml", "Infection/InfectionInterDCB")

**.r2.infection.iniTime = -10
**.r4.infection.iniTime = -10
**.r9.infection.iniTime = -10

#Other
**.r*.infection.data = xmldoc("infection.xml", "Infection/InfectionNode")
**.infection.iniTime = -10

[Config Modular_BE]

#**.listener.configname = "BE"

**.defaultThreshQLength = 0
**.defaultMaxQLength =  100

**.r*.ipcProcess[*].**.queueAllocPolicyName = "QueuePerNQoS"
**.r*.ipcProcess[*].**.queueIdGenName = "IDPerNQoS"

**.r*.ipcProcess[*].relayAndMux.maxQPolicyName = "DumbMaxQ"
**.r*.ipcProcess[*].relayAndMux.qMonitorPolicyName = "ModularMonitor"
**.r*.ipcProcess[*].relayAndMux.schedPolicyName = "DumbSch"

**.r*.ipcProcess[*].relayAndMux.queueMonitorPolicy.outputDropSubModule_Type = "MM_SPort_Drop"


#**.r*.ipcProcess[*].relayAndMux.maxQueuePolicy.printAtEnd = true
#**.r1.relayIpc.routingPolicy.printAtEnd = true
#**.r2.relayIpc.routingPolicy.printAtEnd = true

**.A*.**.routingPolicy.printAtEnd = true
**.B*.**.routingPolicy.printAtEnd = true

**.GWIpc.routingPolicy.printAtEnd = true




























